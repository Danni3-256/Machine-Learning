/****** Script for SelectTopNRows command from SSMS  ******/
SELECT *
  FROM [sales_database].[dbo].[Sales data]

-- SELECTING RELEVANT COLUMNS
SELECT productCode,orderNumber,orderDate,productName,productLine,productVendor,quantityInStock,quantityOrdered,MSRP,
		MSRP,buyPrice,priceEach,status,customerName,customerNumber,amount,country
  FROM [sales_database].[dbo].[Sales data]

-- Unique Values
SELECT DISTINCT YEAR(orderDate) Year
  FROM [sales_database].[dbo].[Sales data]


SELECT DISTINCT productName
  FROM [sales_database].[dbo].[Sales data]

SELECT DISTINCT productLine
  FROM [sales_database].[dbo].[Sales data]

SELECT DISTINCT productVendor
  FROM [sales_database].[dbo].[Sales data]

SELECT DISTINCT country
  FROM [sales_database].[dbo].[Sales data]

---------------------------EXPLORATORY DATA ANALYSIS --------------------------------------

-- Sales by product Line
SELECT productLine, SUM(amount) [Total Sales]
  FROM [sales_database].[dbo].[Sales data]
  GROUP BY productLine
  ORDER BY 2 DESC

-- Product Vendor generating highest revenue
SELECT productVendor, SUM(amount) totalSales
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY productVendor
 ORDER BY 2 DESC

-- Sales by Year/Sales Trend Over Time
SELECT DISTINCT YEAR(orderDate) Year, SUM(amount) [Total Sales]
FROM [sales_database].[dbo].[Sales data]
  GROUP BY YEAR(orderDate)
  ORDER BY YEAR(orderDate) ASC

-- Sales by Month
SELECT MONTH(orderDate) Month, SUM(amount) [Total Sales]
FROM [sales_database].[dbo].[Sales data]
  GROUP BY MONTH(orderDate)
  ORDER BY 2 DESC

-- Products mostly sold in November
SELECT MONTH(orderDate) Month, productLine, SUM(amount) totalRevenue, COUNT(orderNumber) totalNumber
 FROM [sales_database].[dbo].[Sales data]
WHERE YEAR(orderDate) = 2004 and MONTH(orderDate) = 11 
GROUP BY  MONTH(orderDate), productLine
ORDER BY 3 DESC

--Sales by country
SELECT country, SUM(amount) Revenue
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY country
 ORDER BY 2 DESC

-- Total Quantity of each product sold and total revenue generated
SELECT productName, SUM(quantityOrdered) as TotalQuantity, SUM(amount) as Revenue
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY productName

-- Average Price of each product and average revenue per order
SELECT productName, AVG(priceEach) as AveragePrice, AVG(amount) as AverageRevenuePerOrder
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY productName
 ORDER BY 2 DESC

-- Total Spending power by Customers
SELECT customerName, SUM(amount) AS totalSpend
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY customerName
 ORDER BY 2 DESC

 --What city has the highest number of sales in a specific country
SELECT city, sum (amount) Revenue
	FROM [sales_database].[dbo].[Sales data]
	WHERE country = 'UK'
	GROUP BY city
	ORDER BY 2 DESC

-- Relationship between MSRP, Buy Price and Revenue:
SELECT MSRP, buyPrice, SUM(amount) as TotalRevenue
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY MSRP, buyPrice

-- Total Number of Orders Per Customer
SELECT customerName, COUNT(orderNumber) AS TotalOrders
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY customerName
 ORDER BY 2 DESC

-- Average Order Size in terms of quantity ordered
SELECT AVG(quantityOrdered) AS avgQuantityOrdered
 FROM [sales_database].[dbo].[Sales data]

-- Total Revenue Generated by each Product Line
SELECT productLine, SUM(quantityOrdered * priceEach) AS TotalRevenue
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY productLine

-- Most Frequently Ordered Product

SELECT productName, COUNT(productName) AS Orders
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY productName
 ORDER BY Orders DESC
 
-- Number of Orders Shipped Vs Cancelled
SELECT status, COUNT(status) AS Orders
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY status
 ORDER BY 2 ASC

-- What is the Most Expensive Product
SELECT productName, MAX(priceEach) AS MostExpensiveProduct
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY productName
 ORDER BY 2 DESC

---What is the best product in United States?
SELECT country, PRODUCTLINE, sum(amount) Revenue
FROM [sales_database].[dbo].[Sales data]
WHERE country = 'USA'
GROUP BY  country,  PRODUCTLINE
ORDER BY 3 DESC

-- 

-- Who are the best Customers
-- RFM Analysis

----------------- Recency (Latest Purchase)---------------------------------
WITH customer_max_order_date AS (
  SELECT 
    customerName, 
    MAX(orderDate) AS max_order_date
     FROM [sales_database].[dbo].[Sales data]
  GROUP BY 
    customerName
), 
recency AS (
  SELECT 
    customerName, 
    DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])) AS recency
  FROM 
    customer_max_order_date
)
SELECT 
  customerName, 
  recency
FROM 
  recency;

--------------------  Frequency (How Often these Customers Purchase)-------------------------
SELECT customerName, COUNT(orderNumber) AS frequency 
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY customerName
 

--------------------- Monetary ------------------------
SELECT customerName, SUM(amount) AS monetary 
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY customerName
 ORDER BY 2 DESC

---------------------- Now Lets Combine the above Metrics to segment customers into different Groups ------------
/*
WITH customer_max_order_date AS (
  SELECT 
    customerName, 
    MAX(orderDate) AS max_order_date
     FROM [sales_database].[dbo].[Sales data]
  GROUP BY 
    customerName
)
Recency AS (
  SELECT 
    customerName, 
    DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])) AS recency
  FROM 
    [sales_database].[dbo].[Sales data]),
Frequency AS(
SELECT customerName, COUNT(orderNumber) AS frequency 
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY customerName),
Monetary AS(
SELECT customerName, COUNT(orderNumber) AS frequency 
 FROM [sales_database].[dbo].[Sales data]
 GROUP BY customerName)

 SELECT customerName,Recency,Frequency,Monetary
  FROM [sales_database].[dbo].[Sales data]
  4 - RANK() OVER (ORDER BY recency) + 
  4 - RANK() OVER (ORDER BY frequency) + 
  4 - RANK() OVER (ORDER BY monetary) AS rfm_score

  FROM Recency
  JOIN Frequency ON Recency.customerName = Frequency.customerName
  JOIN Monetary ON Recency.customerName = Monetary.customerName */

------------------------------------------------------------------------------------
WITH customer_max_order_date AS (
  SELECT 
    customerName, 
    MAX(orderDate) AS max_order_date
  FROM 
    [sales_database].[dbo].[Sales data]
	GROUP BY 
    customerNumber
), 
recency AS (
  SELECT 
    customerName, 
    DATEDIFF(DD, max_order_date, (SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])) AS recency
  FROM 
    customer_max_order_date
),
frequency AS (
  SELECT 
    customerName, 
    COUNT(orderNumber) AS frequency 
  FROM 
    [sales_database].[dbo].[Sales data] 
  GROUP BY 
    customerName
), 
monetary AS (
  SELECT 
    customerName, 
    SUM(amount) AS monetary 
  FROM 
    [sales_database].[dbo].[Sales data] 
  GROUP BY 
    customerName
)
SELECT 
  customerName,
  recency, 
  frequency, 
  monetary, 
  4 - RANK() OVER (ORDER BY recency) + 
  4 - RANK() OVER (ORDER BY frequency) + 
  4 - RANK() OVER (ORDER BY monetary) AS rfm_score
FROM 
  recency 
  
  JOIN frequency ON recency.customerName = frequency.customerName 
  JOIN monetary ON recency.customerName = monetary.customerName
  ORDER BY rfm_score DESC

-----------------------------------------------------------------------------------------------------

WITH 
  customer_max_order_date AS (
    SELECT customerName, MAX(orderDate) AS max_order_date
    FROM [sales_database].[dbo].[Sales data]
    GROUP BY customerName
  ),
  recency AS (
    SELECT customerName, DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])) AS recency
    FROM customer_max_order_date
  ),
  frequency AS (
    SELECT customerName, COUNT(DISTINCT orderNumber) AS frequency
    FROM [sales_database].[dbo].[Sales data]
    GROUP BY customerName
  ),
  monetary AS (
    SELECT customerName, SUM(amount) AS monetary
    FROM [sales_database].[dbo].[Sales data]
    GROUP BY customerName
  )
SELECT 
  r.customerName,
  DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])) AS recency,
  f.frequency,
  m.monetary,
  4 - RANK() OVER (ORDER BY DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data]))) AS recency_score,
  4 - RANK() OVER (ORDER BY COUNT(DISTINCT orderNumber)) AS frequency_score,
  4 - RANK() OVER (ORDER BY SUM(amount)) AS monetary_score,
  (4 - RANK() OVER (ORDER BY DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data]))) + 
  (4 - RANK() OVER (ORDER BY COUNT(DISTINCT orderNumber))) +
  (4 - RANK() OVER (ORDER BY SUM(amount)))) AS rfm_score
FROM 
  customer_max_order_date AS c
  JOIN recency AS r ON c.customerName = r.customerName
  JOIN frequency AS f ON c.customerName = f.customerName
  JOIN monetary AS m ON c.customerName = m.customerName
GROUP BY 
  r.customerName,
  DATEDIFF(DD, max_order_date,(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])),
  f.frequency,
  m.monetary

---------------------------------------------------------------------------------------------------------------------------
DROP TABLE IF EXISTS #rfm
;WITH rfm AS 
(
	SELECT 
		CUSTOMERNAME, 
		SUM(amount) MonetaryValue,
		AVG(amount) AvgMonetaryValue,
		COUNT(orderNumber) Frequency,
		MAX(orderDate) last_order_date,
		(SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data]) max_order_date,
		DATEDIFF(DD, MAX(orderDate), (SELECT MAX(orderDate) FROM [sales_database].[dbo].[Sales data])) Recency
	FROM [sales_database].[dbo].[Sales data]
	GROUP BY customerName
),
rfm_calc AS
(

	SELECT r.*,
		NTILE(4) OVER (ORDER BY Recency DESC) rfm_recency,
		NTILE(4) OVER (ORDER BY Frequency) rfm_frequency,
		NTILE(4) OVER (ORDER BY MonetaryValue) rfm_monetary
	FROM rfm r
)
SELECT 
	c.*, rfm_recency+ rfm_frequency+ rfm_monetary AS rfm_cell,
	CAST(rfm_recency AS VARCHAR) + CAST(rfm_frequency AS VARCHAR) + CAST(rfm_monetary  AS VARCHAR)rfm_cell_string
INTO #rfm
FROM rfm_calc c

SELECT customerName , rfm_recency, rfm_frequency, rfm_monetary,
	CASE 
		WHEN rfm_cell_string in (111, 112 , 121, 122, 123, 132, 211, 212, 114, 141) THEN 'lost_customers'  --lost customers
		WHEN rfm_cell_string in (133, 134, 143, 244, 334, 343, 344, 144) THEN 'slipping away, cannot lose' -- (Big spenders who haven�t purchased lately) slipping away
		WHEN rfm_cell_string in (311, 411, 331) THEN 'new customers'
		WHEN rfm_cell_string in (222, 223, 233, 322) THEN 'potential churners'
		WHEN rfm_cell_string in (323, 333,321, 422, 332, 432) THEN 'active' --(Customers who buy often & recently, but at low price points)
		WHEN rfm_cell_string in (433, 434, 443, 444) THEN 'loyal'
	END rfm_segment

FROM #rfm

SELECT customerName, COUNT(rfm_segment)
FROM #rfm





